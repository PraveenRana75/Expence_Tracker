/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.2.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-bootstrap', version: '3.2.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.2.0'
    implementation 'org.springframework.boot: spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '$lombokVersion'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '$lombokVersion'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '$lombokVersion'
    testImplementation group:'org.projectlombok', name: 'lombok', version: '$lombokVersion'



}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
